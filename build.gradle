import edu.sc.seis.launch4j.tasks.Launch4jLibraryTask

plugins {
    id 'java'
    id 'edu.sc.seis.launch4j' version '2.5.3'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

shadowJar{
    manifest {
        attributes 'Main-Class': 'net.stalemate.Main'
    }
    archiveBaseName.set('stalemate-universal')
    archiveClassifier.set('')
}

group 'net.stalemate'
version 'v0.3.xa-dev'

task prepareDirsRelease {
    group("stalemate-release")
    mustRunAfter clean
    doFirst {
        mkdir "$buildDir/release"
    }
}

task createServerExe(type: Launch4jLibraryTask) {
    group("stalemate-release")
    mustRunAfter prepareDirsRelease
    headerType "console"
    mainClassName "net.stalemate.Main"
    icon "${projectDir}/icons/stalemate_srv.ico"
    jreMinVersion "16"
    productName "Stalemate Server"
    copyright "GNU AGPLv3, CC-BY-SA"
    outfile "stalemate_server.exe"
    cmdLine "--serv"
}

task createClientExe(type: Launch4jLibraryTask) {
    group("stalemate-release")
    mustRunAfter prepareDirsRelease
    headerType "gui"
    icon "${projectDir}/icons/stalemate_icon.ico"
    jreMinVersion "16"
    mainClassName "net.stalemate.Main"
    productName "Stalemate"
    copyright "GNU AGPLv3, CC-BY-SA"
    outfile "stalemate_client.exe"
}

task cpExes (type: Copy){
    group("stalemate-release")
    mustRunAfter createServerExe
    mustRunAfter createClientExe
    from "$buildDir/launch4j"
    into "$buildDir/release"
}

task prepareFiles(type: Copy){
    group("stalemate-release")
    mustRunAfter cpExes
    from "."
    into "$buildDir/release"
    include "grass32"
    include "config/**"
    include "maps/**"
}

task copyFatJar(type: Copy){
    group("stalemate-release")
    mustRunAfter shadowJar
    mustRunAfter prepareDirsRelease
    from "$buildDir/libs"
    into "$buildDir/release"
}

task clearJarsLibs{
    group("stalemate-release")
    mustRunAfter copyFatJar
    delete fileTree("$buildDir/libs").include('**/*')
}

task releaseBuild{
    group("stalemate-release")
    dependsOn prepareDirsRelease
    dependsOn createClientExe
    dependsOn createServerExe
    dependsOn cpExes
    dependsOn prepareFiles
    dependsOn shadowJar
    dependsOn copyFatJar
    dependsOn clearJarsLibs
}

task releaseBuildUniversalOnly{
    group("stalemate-release")
    dependsOn prepareDirsRelease
    dependsOn prepareFiles
    dependsOn shadowJar
    dependsOn copyFatJar
    dependsOn clearJarsLibs
}

task clearRelease{
    group("stalemate-release")
    delete fileTree("$buildDir/release").include('**/*')
}

task runClient(type: JavaExec) {
    dependsOn(build)
    group("run-stalemate")
    classpath sourceSets.main.runtimeClasspath
    main = "net.stalemate.Main"
}

task runServer(type: JavaExec) {
    dependsOn(build)
    group("run-stalemate")
    classpath sourceSets.main.runtimeClasspath
    main = "net.stalemate.Main"
    args("--serv")
}

task runSingleplayer(type: JavaExec) {
    dependsOn(build)
    group("run-stalemate")
    classpath sourceSets.main.runtimeClasspath
    main = "net.stalemate.Main"
    args("--singleplayer")
}

task runServerDbg(type: JavaExec) {
    dependsOn(build)
    group("run-stalemate")
    classpath sourceSets.main.runtimeClasspath
    main = "net.stalemate.Main"
    args("--serv", "--dbg")
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2'
    implementation 'org.yaml:snakeyaml:2.0'
    implementation 'org.jetbrains:annotations:24.0.1'
}

test {
    useJUnitPlatform()
}